{"ast":null,"code":"//api/new-meetup\nimport { Schema, connect, model, connection } from \"mongoose\";\nconst meetUpSchema = new Schema({\n  title: String,\n  image: String,\n  address: String,\n  description: String\n});\nconst MeetUp = model(\"meetUp\", meetUpSchema);\n\nasync function handler(req, res) {\n  switch (req.method) {\n    case \"POST\":\n      console.log(\"Creating data...\");\n      const {\n        title,\n        image,\n        address,\n        description\n      } = req.body;\n\n      try {\n        await connect(\"mongodb://localhost/next_db\");\n        const result = await MeetUp.create({\n          title,\n          image,\n          address,\n          description\n        });\n        console.log(\"Result: \", result);\n        connection.close();\n        res.status(201).send({\n          message: \"Meetup created\",\n          result\n        });\n      } catch (err) {\n        console.log(\"Error: \", err.message);\n      }\n\n    default:\n      return;\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/Builds/Tutorials/React/Section 23/meetup-app/pages/api/new-meetup.js"],"names":["Schema","connect","model","connection","meetUpSchema","title","String","image","address","description","MeetUp","handler","req","res","method","console","log","body","result","create","close","status","send","message","err"],"mappings":"AAAA;AACA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,UAAjC,QAAmD,UAAnD;AAEA,MAAMC,YAAY,GAAG,IAAIJ,MAAJ,CAAW;AAC9BK,EAAAA,KAAK,EAAEC,MADuB;AAE9BC,EAAAA,KAAK,EAAED,MAFuB;AAG9BE,EAAAA,OAAO,EAAEF,MAHqB;AAI9BG,EAAAA,WAAW,EAAEH;AAJiB,CAAX,CAArB;AAOA,MAAMI,MAAM,GAAGR,KAAK,CAAC,QAAD,EAAWE,YAAX,CAApB;;AAEA,eAAeO,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,UAAQD,GAAG,CAACE,MAAZ;AACE,SAAK,MAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,YAAM;AAAEX,QAAAA,KAAF;AAASE,QAAAA,KAAT;AAAgBC,QAAAA,OAAhB;AAAyBC,QAAAA;AAAzB,UAAyCG,GAAG,CAACK,IAAnD;;AAEA,UAAI;AACF,cAAMhB,OAAO,CAAC,6BAAD,CAAb;AAEA,cAAMiB,MAAM,GAAG,MAAMR,MAAM,CAACS,MAAP,CAAc;AACjCd,UAAAA,KADiC;AAEjCE,UAAAA,KAFiC;AAGjCC,UAAAA,OAHiC;AAIjCC,UAAAA;AAJiC,SAAd,CAArB;AAOAM,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,MAAxB;AAEAf,QAAAA,UAAU,CAACiB,KAAX;AACAP,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,gBAAX;AAA6BL,UAAAA;AAA7B,SAArB;AACD,OAdD,CAcE,OAAOM,GAAP,EAAY;AACZT,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,GAAG,CAACD,OAA3B;AACD;;AACH;AACE;AAvBJ;AAyBD;;AAED,eAAeZ,OAAf","sourcesContent":["//api/new-meetup\r\nimport { Schema, connect, model, connection } from \"mongoose\";\r\n\r\nconst meetUpSchema = new Schema({\r\n  title: String,\r\n  image: String,\r\n  address: String,\r\n  description: String,\r\n});\r\n\r\nconst MeetUp = model(\"meetUp\", meetUpSchema);\r\n\r\nasync function handler(req, res) {\r\n  switch (req.method) {\r\n    case \"POST\":\r\n      console.log(\"Creating data...\");\r\n      const { title, image, address, description } = req.body;\r\n\r\n      try {\r\n        await connect(\"mongodb://localhost/next_db\");\r\n\r\n        const result = await MeetUp.create({\r\n          title,\r\n          image,\r\n          address,\r\n          description,\r\n        });\r\n\r\n        console.log(\"Result: \", result);\r\n\r\n        connection.close();\r\n        res.status(201).send({ message: \"Meetup created\", result });\r\n      } catch (err) {\r\n        console.log(\"Error: \", err.message);\r\n      }\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}