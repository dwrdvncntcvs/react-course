{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Builds\\\\Tutorials\\\\React\\\\Section 23\\\\meetup-app\\\\pages\\\\[meetUpId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Head from \"next/head\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nimport dbConnect from \"../../database/mongodb/config\";\nimport MeetUp from \"../../database/mongodb/models/MeetUp\";\n\nconst MeetUpDetailsPage = ({\n  image,\n  title,\n  address,\n  description\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetUpDetails, {\n      image: image,\n      title: title,\n      address: address,\n      description: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticPaths() {\n  await dbConnect();\n  const meetups = await MeetUp.find();\n  const paths = meetups.map(({\n    _id\n  }) => ({\n    params: {\n      meetUpId: _id.toString()\n    }\n  }));\n  return {\n    fallback: false,\n    paths\n  };\n}\n\nconst cleanData = data => {\n  const document = data._doc;\n\n  const id = data._id.toString();\n\n  delete document._id;\n  return _objectSpread(_objectSpread({}, document), {}, {\n    id\n  });\n};\n\nexport async function getStaticProps(context) {\n  const {\n    meetUpId\n  } = context.params;\n  const meetup = await MeetUp.findById(meetUpId);\n  const cleanMeetUpData = cleanData(meetup);\n  return {\n    props: _objectSpread({}, cleanMeetUpData)\n  };\n}\nexport default MeetUpDetailsPage;","map":{"version":3,"sources":["D:/Builds/Tutorials/React/Section 23/meetup-app/pages/[meetUpId]/index.js"],"names":["React","Head","MeetUpDetails","dbConnect","MeetUp","MeetUpDetailsPage","image","title","address","description","getStaticPaths","meetups","find","paths","map","_id","params","meetUpId","toString","fallback","cleanData","data","document","_doc","id","getStaticProps","context","meetup","findById","cleanMeetUpData","props"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA;AAAzB,CAAD,KAA4C;AACpE,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,aAAD;AACE,MAAA,KAAK,EAAED,KADT;AAEE,MAAA,KAAK,EAAEC,KAFT;AAGE,MAAA,OAAO,EAAEC,OAHX;AAIE,MAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAaD,CAdD;;AAgBA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMP,SAAS,EAAf;AAEA,QAAMQ,OAAO,GAAG,MAAMP,MAAM,CAACQ,IAAP,EAAtB;AACA,QAAMC,KAAK,GAAGF,OAAO,CAACG,GAAR,CAAY,CAAC;AAAEC,IAAAA;AAAF,GAAD,MAAc;AACtCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAEF,GAAG,CAACG,QAAJ;AADJ;AAD8B,GAAd,CAAZ,CAAd;AAMA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELN,IAAAA;AAFK,GAAP;AAID;;AAED,MAAMO,SAAS,GAAIC,IAAD,IAAU;AAC1B,QAAMC,QAAQ,GAAGD,IAAI,CAACE,IAAtB;;AACA,QAAMC,EAAE,GAAGH,IAAI,CAACN,GAAL,CAASG,QAAT,EAAX;;AACA,SAAOI,QAAQ,CAACP,GAAhB;AACA,yCAAYO,QAAZ;AAAsBE,IAAAA;AAAtB;AACD,CALD;;AAOA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAET,IAAAA;AAAF,MAAeS,OAAO,CAACV,MAA7B;AAEA,QAAMW,MAAM,GAAG,MAAMvB,MAAM,CAACwB,QAAP,CAAgBX,QAAhB,CAArB;AACA,QAAMY,eAAe,GAAGT,SAAS,CAACO,MAAD,CAAjC;AAEA,SAAO;AACLG,IAAAA,KAAK,oBACAD,eADA;AADA,GAAP;AAKD;AAED,eAAexB,iBAAf","sourcesContent":["import React from \"react\";\r\nimport Head from \"next/head\";\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\nimport dbConnect from \"../../database/mongodb/config\";\r\nimport MeetUp from \"../../database/mongodb/models/MeetUp\";\r\n\r\nconst MeetUpDetailsPage = ({ image, title, address, description }) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{title}</title>\r\n      </Head>\r\n      <MeetUpDetails\r\n        image={image}\r\n        title={title}\r\n        address={address}\r\n        description={description}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  await dbConnect();\r\n\r\n  const meetups = await MeetUp.find();\r\n  const paths = meetups.map(({ _id }) => ({\r\n    params: {\r\n      meetUpId: _id.toString(),\r\n    },\r\n  }));\r\n\r\n  return {\r\n    fallback: false,\r\n    paths,\r\n  };\r\n}\r\n\r\nconst cleanData = (data) => {\r\n  const document = data._doc;\r\n  const id = data._id.toString();\r\n  delete document._id;\r\n  return { ...document, id };\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const { meetUpId } = context.params;\r\n\r\n  const meetup = await MeetUp.findById(meetUpId);\r\n  const cleanMeetUpData = cleanData(meetup);\r\n\r\n  return {\r\n    props: {\r\n      ...cleanMeetUpData,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetUpDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}